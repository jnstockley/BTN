# This is a basic workflow to help you get started with Actions

name: Nightly-Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "nightly" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Jar
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        name: Step 1 - Checkout Nightly Branch
  
      # Runs a single command using the runners shell
      - name: Step 2 - Setup JDK 17
        uses: actions/setup-java@v3.4.1
        with: 
          java-version: 17
          distribution: 'temurin'

      # Runs a set of commands using the runners shell
      - name: Step 3 - Build Maven Project
        run: mvn -B package --file pom.xml
          
      - name: Step 4 - Upload Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: BSN.jar
          path: target/*.jar
          
  release:
    name: Release Jar
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}
          RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}
      - name: Step 1 - Download Jar
        uses: actions/download-artifact@v3.0.0
      - name: Step 2 - Create Release
        uses: Hs1r1us/Release-AIO@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.date.outputs.date }}
          release_name: nightly-${{ steps.date.outputs.date }}
          prerelease: true
          asset_files: BSN.jar
