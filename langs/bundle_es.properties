# Auth.java
missingAPIKey = ¡%f% falta al menos una clave de API requerida!
noAPIKeys = ¡%f% no contiene ninguna clave API!
addTwitchAPI = ¿Quieres agregar claves API de Twitch? (S/n): 
twitchSecret = Ingrese su secreto de cliente de Twitch: 
twitchClient = Ingrese su ID de cliente de Twitch:
addAlertzy = ¿Quieres agregar la clave API de Alertzy? (S/n): 
numAlertzyKeys = ¿Cuántas claves de cuenta de Alertzy desea agregar?: 
noAlertzyKeys = Falta la(s) clave(s) de API de Alertzy!
enterAlertzyKey = Ingrese la clave de la cuenta de Alertzy %f%: 
noAPIKeysAdded = ¡No se agregaron clave(s) API!
APIKeysAdded = Se han agregado claves API a %f%
removeTwitchAPI = ¿Quieres eliminar las claves de la API de Twitch? (S/n): 
removeAlertzyAPI = ¿Quieres eliminar la clave API de Alertzy? (S/n): 
APIKeysRemoved = Se eliminaron las claves de API seleccionadas. Asegúrese de volver a agregarlos antes de ejecutar BTTN.
yes = sí
y = s
no = no
n = n
isEmpty = ¡%f% está vacío!
noAPIKeysSelRem = ¡No se seleccionaron llaves de API para ser eliminadas!
invalidTwitchKeys = El ID de cliente y el secreto del cliente ingresados no son válidos.

# BTTN.java
debugMode = MODO DEPURACIÓN HABILITADO
BTTNTesting = Versión BTTN: %f%-PRUEBAS
BTTNRelease = Versión BTTN: %f%-LANZAMIENTO
build = CONSTRUIR: %f%
statusUnchanged = ¡Estado en vivo sin cambios!
invalidArgs = ¡%f% contiene argumentos no válidos!
invalidConfig = %f% es un archivo de configuración no válido. ¡Asegúrese de que todas las claves requeridas se agreguen y sean válidas!

# Bundle.java
missingKey = Falta clave: 

# Channel.java
numChanAdd = Ingrese cuántos canale(s) desea que se comiencen a verificar: 
invalidChanNum = ¡Número de canal no válido!
chanName = Ingrese el nombre del canal (%f%): 
addedChan = ¡Canales agregado(s)!
channelsChecked = ¡Canales que se están comprobando!
chanRemove = Por favor ingrese el/(los) número(s) de los canales que desea eliminar separados por una coma\nCanal(es):
removedChan = ¡Canales eliminado(s)!
noChannels = No hay canales en %f%
invalidChan = Estos canales no son válidos y no se agregaron: %f%

# Failover.java
failoverSubject = Mensaje de conmutación por error de BTTN: %f%
failoverSent = Mensaje de conmutación por error enviado: 
failoverTextEmail = ¿Desea que los mensajes de conmutación por error se envíen por correo electrónico o mensaje de texto?: 
enterPhoneNumber = Ingrese su número de teléfono, sin espacios ni guiones (solo en EE. UU.): 
selectProvider = Seleccione su proveedor de telefonía celular de la lista a continuación
provider = Proveedor: 
enterEmailAddress = Ingrese su dirección de correo electrónico completa: 
toName = Por favor, escriba su nombre: 
fromEmail = Introduzca la dirección de correo electrónico desde la que se enviarán las notificaciones:
smtpPassword = Introduzca la contraseña de esa cuenta de correo electrónico: 
smtpServer = Ingrese el servidor SMTP: 
smtpPort = Introduzca el número de puerto del servidor SMTP: 
failoverEnabled = ¡Método de conmutación por error habilitado y agregado!
failoverRemoved = ¡Método de conmutación por error eliminado y deshabilitado!
failoverDisabled = ¡La conmutación por error ya está deshabilitada!
text = texto
email = correo electrónico
customProvider = Modificado (avanzado)
cellProviderExtension = Ingrese la extensión de correo electrónico del proveedor de telefonía celular (incluya @): 
badSuffix = ¡El dominio de correo electrónico que ingresó no es válido!
badEmail = %f% no es una dirección de correo electrónico válida.
badPhoneNumber = %f% no es un número de teléfono válido.

# Helper.java
errorCheckingStatus = Error al verificar el estado en vivo de %f%
noChannels = ¡%f% no tiene canales!

# Logging.java
info = - [INFORMACIÓN] 
warn = - [ADVERTIR] 
error = - [FALTA] 
deleteLogError = Error al limpiar el registro!

# Notifications.java
encounteredError = ¡BTTN encontró un error!
notSentEveryone = ¡Notificación no enviada a todos!
notSent = ¡Notificación no enviada!
newVersion = ¡BTTN tiene una nueva versión disponible!
downloadUpdate = ¡Descargue la nueva versión de BTTN para que BTTN verifique los cambios de estado en vivo!
updateTo = ¡BTTN tiene una nueva actualización disponible! Actualice a la versión: %f%
isLive = ¡%f% está en vivo!
areLive = ¡%f% están en vivo! ¡Échales un vistazo en Twitch!
notificationSent = Notificación enviada para: %f%
errorNotificationSent = ¡Notificación de error enviada!

# SetupManager.java
setupWelcome = ¡Qué configurar!
modifyKeys = 1. Modificar claves de API
modifyChans = 2. Modificar los canales que se están comprobando
modifyFailover = 3. Modificar la conmutación por error de correo electrónico/texto
wikiHelp = 4. WiKi/Ayuda
option = Opción: 
invalidOption = ¡%f% no es una opción válida!
howModifyKeys = ¿Cómo desea modificar sus claves API?
addKeys = 1. Agregar claves
removeKeys = 2. Eliminar claves
howModifyChan = ¿Cómo desea modificar los canales de Twitch que se están verificando?
addChan = 1. Agregue los canale(s) que desea verificar
removeChan = 2. Elimine los canale(s) que desee comprobar
howModifyFailover = ¿Cómo desea modificar su configuración de conmutación por error?
addFailover = 1. Habilite y agregue una cuenta de conmutación por error
removeFailover = 2. Deshabilite y elimine una cuenta de conmutación por error

# Updater.java
updateAvailable = ¡Actualización disponible!

# Global
viewUpdate = ¡Vea la actualización!
openStream = ¡Abre Twitch Stream(s)!
failoverNotEnabled = ¡La conmutación por error no está habilitada y no se puede utilizar!

# Flags
setup = configuración
setupDesc = Ejecute BTTN en el modo de configuración para configurar el archivo de configuración de JSON
version = versión
versionDesc = Muestra el número de versión, la rama y la fecha de construcción de BTTN
debug = depurar
debugDesc = Pone BTTN en el modo de depuración y muestra información útil para la depuración
config = configurar
confifgDesc = Utiliza el archivo dado como archivo JSON Config.
help = ayuda
helpDesc = Mostrar este mensaje de ayuda
BTTNUsage = BTTN [ARCHIVO] ... [OPCIÓN]